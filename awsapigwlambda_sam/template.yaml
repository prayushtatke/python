AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: file-apis
Parameters:
  LogLevel:
    Type: String
    Default: 'INFO'
  Stage:
    Type: String
    AllowedValues:
      - dev
      - prod
      - qa
      - staging
  Product:
    Type: String
    Default: FileApi
  Subnets:
    Type: 'List<String>'
    Default: "<Subnets>"
  SecGrps:
    Type: 'List<String>'
    Default: "<SecGrps>"
  VpcID:
    Type: String
    Default: "<VpcID>"
  S3BucketName:
    Type: String
    Description: The name of the S3 bucket in which the Swagger specification is stored
    Default: "sam.test.v1"
  S3Path:
    Type: String
    Description: The path in which the Swagger yaml is stored
    Default: "swagger"

Globals:
  Function:
    Timeout: 60

Resources:
  AWSAPI:
      Type: AWS::Serverless::Api
      Properties:
        Name: !Join [ "-", [!Ref "Stage", generic, !Ref "Product", "api-v1" ]]
        StageName: !Join [ "-", [!Ref "Stage", !Ref "Product" ]]
        EndpointConfiguration: PRIVATE
        DefinitionBody:
          x-amazon-apigateway-policy:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Principal: "*"
                Action: execute-api:Invoke
                Resource: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*"
                Condition:
                  StringEquals:
                    aws:sourceVpc: !Ref VpcID
          Fn::Transform:
            Name: AWS::Include
            Parameters:
              Location: !Join [ "/", [ "s3:/", !Ref "S3BucketName", !Ref "S3Path", "swagger.yaml" ] ]
            Variables:
              Stage: !Ref Stage
              Product: !Ref Product


  FilesApi:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join [ "-", [  !Ref "Stage", !Ref "Product", !Ref "filesLambdaName" ] ]
      CodeUri: file-apis/src/
      Handler: api.handler
      Runtime: python3.7
      MemorySize: 128
      Environment:
        Variables:
          DB_REGION: !Ref "Region"

      VpcConfig:
        SubnetIds: !Ref "Subnets"
        SecurityGroupIds: !Ref "SecGrps"
      Events:
        Api1:
          Type: Api
          Properties:
            Path: "/files"
            Method: GET
            RestApiId: !Ref AWSAPI
      Policies:
        - AWSLambdaFullAccess # Managed Policy
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                - ec2:*
              Resource: '*'
